/* This file was generated by SableCC (http://www.sablecc.org/). */

package cordel.node;

import cordel.analysis.*;

@SuppressWarnings("nls")
public final class ADecFuncao extends PDecFuncao
{
    private TArrume _arrume_;
    private PTipoRetorno _tipoRetorno_;
    private TAssim _assim_;
    private TDoisPontos _doisPontos_;
    private TId _id_;
    private TEPar _ePar_;
    private PParametros _parametros_;
    private TDPar _dPar_;
    private PBloco _bloco_;

    public ADecFuncao()
    {
        // Constructor
    }

    public ADecFuncao(
        @SuppressWarnings("hiding") TArrume _arrume_,
        @SuppressWarnings("hiding") PTipoRetorno _tipoRetorno_,
        @SuppressWarnings("hiding") TAssim _assim_,
        @SuppressWarnings("hiding") TDoisPontos _doisPontos_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") TEPar _ePar_,
        @SuppressWarnings("hiding") PParametros _parametros_,
        @SuppressWarnings("hiding") TDPar _dPar_,
        @SuppressWarnings("hiding") PBloco _bloco_)
    {
        // Constructor
        setArrume(_arrume_);

        setTipoRetorno(_tipoRetorno_);

        setAssim(_assim_);

        setDoisPontos(_doisPontos_);

        setId(_id_);

        setEPar(_ePar_);

        setParametros(_parametros_);

        setDPar(_dPar_);

        setBloco(_bloco_);

    }

    @Override
    public Object clone()
    {
        return new ADecFuncao(
            cloneNode(this._arrume_),
            cloneNode(this._tipoRetorno_),
            cloneNode(this._assim_),
            cloneNode(this._doisPontos_),
            cloneNode(this._id_),
            cloneNode(this._ePar_),
            cloneNode(this._parametros_),
            cloneNode(this._dPar_),
            cloneNode(this._bloco_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADecFuncao(this);
    }

    public TArrume getArrume()
    {
        return this._arrume_;
    }

    public void setArrume(TArrume node)
    {
        if(this._arrume_ != null)
        {
            this._arrume_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._arrume_ = node;
    }

    public PTipoRetorno getTipoRetorno()
    {
        return this._tipoRetorno_;
    }

    public void setTipoRetorno(PTipoRetorno node)
    {
        if(this._tipoRetorno_ != null)
        {
            this._tipoRetorno_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tipoRetorno_ = node;
    }

    public TAssim getAssim()
    {
        return this._assim_;
    }

    public void setAssim(TAssim node)
    {
        if(this._assim_ != null)
        {
            this._assim_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._assim_ = node;
    }

    public TDoisPontos getDoisPontos()
    {
        return this._doisPontos_;
    }

    public void setDoisPontos(TDoisPontos node)
    {
        if(this._doisPontos_ != null)
        {
            this._doisPontos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._doisPontos_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public TEPar getEPar()
    {
        return this._ePar_;
    }

    public void setEPar(TEPar node)
    {
        if(this._ePar_ != null)
        {
            this._ePar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ePar_ = node;
    }

    public PParametros getParametros()
    {
        return this._parametros_;
    }

    public void setParametros(PParametros node)
    {
        if(this._parametros_ != null)
        {
            this._parametros_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parametros_ = node;
    }

    public TDPar getDPar()
    {
        return this._dPar_;
    }

    public void setDPar(TDPar node)
    {
        if(this._dPar_ != null)
        {
            this._dPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dPar_ = node;
    }

    public PBloco getBloco()
    {
        return this._bloco_;
    }

    public void setBloco(PBloco node)
    {
        if(this._bloco_ != null)
        {
            this._bloco_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._bloco_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._arrume_)
            + toString(this._tipoRetorno_)
            + toString(this._assim_)
            + toString(this._doisPontos_)
            + toString(this._id_)
            + toString(this._ePar_)
            + toString(this._parametros_)
            + toString(this._dPar_)
            + toString(this._bloco_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._arrume_ == child)
        {
            this._arrume_ = null;
            return;
        }

        if(this._tipoRetorno_ == child)
        {
            this._tipoRetorno_ = null;
            return;
        }

        if(this._assim_ == child)
        {
            this._assim_ = null;
            return;
        }

        if(this._doisPontos_ == child)
        {
            this._doisPontos_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._ePar_ == child)
        {
            this._ePar_ = null;
            return;
        }

        if(this._parametros_ == child)
        {
            this._parametros_ = null;
            return;
        }

        if(this._dPar_ == child)
        {
            this._dPar_ = null;
            return;
        }

        if(this._bloco_ == child)
        {
            this._bloco_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._arrume_ == oldChild)
        {
            setArrume((TArrume) newChild);
            return;
        }

        if(this._tipoRetorno_ == oldChild)
        {
            setTipoRetorno((PTipoRetorno) newChild);
            return;
        }

        if(this._assim_ == oldChild)
        {
            setAssim((TAssim) newChild);
            return;
        }

        if(this._doisPontos_ == oldChild)
        {
            setDoisPontos((TDoisPontos) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._ePar_ == oldChild)
        {
            setEPar((TEPar) newChild);
            return;
        }

        if(this._parametros_ == oldChild)
        {
            setParametros((PParametros) newChild);
            return;
        }

        if(this._dPar_ == oldChild)
        {
            setDPar((TDPar) newChild);
            return;
        }

        if(this._bloco_ == oldChild)
        {
            setBloco((PBloco) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
