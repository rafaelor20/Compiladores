/* This file was generated by SableCC (http://www.sablecc.org/). */

package cordel.node;

import cordel.analysis.*;

@SuppressWarnings("nls")
public final class ASeSenaoAbertoOpenStatement extends POpenStatement
{
    private TSe _se_;
    private TEPar _ePar_;
    private PExp _exp_;
    private TDPar _dPar_;
    private PClosedStatement _closedStatement_;
    private TSenao _senao_;
    private POpenStatement _openStatement_;

    public ASeSenaoAbertoOpenStatement()
    {
        // Constructor
    }

    public ASeSenaoAbertoOpenStatement(
        @SuppressWarnings("hiding") TSe _se_,
        @SuppressWarnings("hiding") TEPar _ePar_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TDPar _dPar_,
        @SuppressWarnings("hiding") PClosedStatement _closedStatement_,
        @SuppressWarnings("hiding") TSenao _senao_,
        @SuppressWarnings("hiding") POpenStatement _openStatement_)
    {
        // Constructor
        setSe(_se_);

        setEPar(_ePar_);

        setExp(_exp_);

        setDPar(_dPar_);

        setClosedStatement(_closedStatement_);

        setSenao(_senao_);

        setOpenStatement(_openStatement_);

    }

    @Override
    public Object clone()
    {
        return new ASeSenaoAbertoOpenStatement(
            cloneNode(this._se_),
            cloneNode(this._ePar_),
            cloneNode(this._exp_),
            cloneNode(this._dPar_),
            cloneNode(this._closedStatement_),
            cloneNode(this._senao_),
            cloneNode(this._openStatement_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASeSenaoAbertoOpenStatement(this);
    }

    public TSe getSe()
    {
        return this._se_;
    }

    public void setSe(TSe node)
    {
        if(this._se_ != null)
        {
            this._se_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._se_ = node;
    }

    public TEPar getEPar()
    {
        return this._ePar_;
    }

    public void setEPar(TEPar node)
    {
        if(this._ePar_ != null)
        {
            this._ePar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ePar_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TDPar getDPar()
    {
        return this._dPar_;
    }

    public void setDPar(TDPar node)
    {
        if(this._dPar_ != null)
        {
            this._dPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dPar_ = node;
    }

    public PClosedStatement getClosedStatement()
    {
        return this._closedStatement_;
    }

    public void setClosedStatement(PClosedStatement node)
    {
        if(this._closedStatement_ != null)
        {
            this._closedStatement_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._closedStatement_ = node;
    }

    public TSenao getSenao()
    {
        return this._senao_;
    }

    public void setSenao(TSenao node)
    {
        if(this._senao_ != null)
        {
            this._senao_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._senao_ = node;
    }

    public POpenStatement getOpenStatement()
    {
        return this._openStatement_;
    }

    public void setOpenStatement(POpenStatement node)
    {
        if(this._openStatement_ != null)
        {
            this._openStatement_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._openStatement_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._se_)
            + toString(this._ePar_)
            + toString(this._exp_)
            + toString(this._dPar_)
            + toString(this._closedStatement_)
            + toString(this._senao_)
            + toString(this._openStatement_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._se_ == child)
        {
            this._se_ = null;
            return;
        }

        if(this._ePar_ == child)
        {
            this._ePar_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._dPar_ == child)
        {
            this._dPar_ = null;
            return;
        }

        if(this._closedStatement_ == child)
        {
            this._closedStatement_ = null;
            return;
        }

        if(this._senao_ == child)
        {
            this._senao_ = null;
            return;
        }

        if(this._openStatement_ == child)
        {
            this._openStatement_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._se_ == oldChild)
        {
            setSe((TSe) newChild);
            return;
        }

        if(this._ePar_ == oldChild)
        {
            setEPar((TEPar) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._dPar_ == oldChild)
        {
            setDPar((TDPar) newChild);
            return;
        }

        if(this._closedStatement_ == oldChild)
        {
            setClosedStatement((PClosedStatement) newChild);
            return;
        }

        if(this._senao_ == oldChild)
        {
            setSenao((TSenao) newChild);
            return;
        }

        if(this._openStatement_ == oldChild)
        {
            setOpenStatement((POpenStatement) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
