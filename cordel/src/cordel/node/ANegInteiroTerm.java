/* This file was generated by SableCC (http://www.sablecc.org/). */

package cordel.node;

import cordel.analysis.*;

@SuppressWarnings("nls")
public final class ANegInteiroTerm extends PTerm
{
    private TEPar _ePar_;
    private TMenos _menos_;
    private TNumeroInteiro _numeroInteiro_;
    private TDPar _dPar_;

    public ANegInteiroTerm()
    {
        // Constructor
    }

    public ANegInteiroTerm(
        @SuppressWarnings("hiding") TEPar _ePar_,
        @SuppressWarnings("hiding") TMenos _menos_,
        @SuppressWarnings("hiding") TNumeroInteiro _numeroInteiro_,
        @SuppressWarnings("hiding") TDPar _dPar_)
    {
        // Constructor
        setEPar(_ePar_);

        setMenos(_menos_);

        setNumeroInteiro(_numeroInteiro_);

        setDPar(_dPar_);

    }

    @Override
    public Object clone()
    {
        return new ANegInteiroTerm(
            cloneNode(this._ePar_),
            cloneNode(this._menos_),
            cloneNode(this._numeroInteiro_),
            cloneNode(this._dPar_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANegInteiroTerm(this);
    }

    public TEPar getEPar()
    {
        return this._ePar_;
    }

    public void setEPar(TEPar node)
    {
        if(this._ePar_ != null)
        {
            this._ePar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ePar_ = node;
    }

    public TMenos getMenos()
    {
        return this._menos_;
    }

    public void setMenos(TMenos node)
    {
        if(this._menos_ != null)
        {
            this._menos_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._menos_ = node;
    }

    public TNumeroInteiro getNumeroInteiro()
    {
        return this._numeroInteiro_;
    }

    public void setNumeroInteiro(TNumeroInteiro node)
    {
        if(this._numeroInteiro_ != null)
        {
            this._numeroInteiro_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._numeroInteiro_ = node;
    }

    public TDPar getDPar()
    {
        return this._dPar_;
    }

    public void setDPar(TDPar node)
    {
        if(this._dPar_ != null)
        {
            this._dPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dPar_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ePar_)
            + toString(this._menos_)
            + toString(this._numeroInteiro_)
            + toString(this._dPar_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ePar_ == child)
        {
            this._ePar_ = null;
            return;
        }

        if(this._menos_ == child)
        {
            this._menos_ = null;
            return;
        }

        if(this._numeroInteiro_ == child)
        {
            this._numeroInteiro_ = null;
            return;
        }

        if(this._dPar_ == child)
        {
            this._dPar_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ePar_ == oldChild)
        {
            setEPar((TEPar) newChild);
            return;
        }

        if(this._menos_ == oldChild)
        {
            setMenos((TMenos) newChild);
            return;
        }

        if(this._numeroInteiro_ == oldChild)
        {
            setNumeroInteiro((TNumeroInteiro) newChild);
            return;
        }

        if(this._dPar_ == oldChild)
        {
            setDPar((TDPar) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
