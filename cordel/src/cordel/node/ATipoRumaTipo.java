/* This file was generated by SableCC (http://www.sablecc.org/). */

package cordel.node;

import cordel.analysis.*;

@SuppressWarnings("nls")
public final class ATipoRumaTipo extends PTipo
{
    private TRuma _ruma_;
    private TDe _de_;
    private PTipoBase _tipoBase_;
    private TECol _eCol_;
    private PExp _exp_;
    private TDCol _dCol_;

    public ATipoRumaTipo()
    {
        // Constructor
    }

    public ATipoRumaTipo(
        @SuppressWarnings("hiding") TRuma _ruma_,
        @SuppressWarnings("hiding") TDe _de_,
        @SuppressWarnings("hiding") PTipoBase _tipoBase_,
        @SuppressWarnings("hiding") TECol _eCol_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TDCol _dCol_)
    {
        // Constructor
        setRuma(_ruma_);

        setDe(_de_);

        setTipoBase(_tipoBase_);

        setECol(_eCol_);

        setExp(_exp_);

        setDCol(_dCol_);

    }

    @Override
    public Object clone()
    {
        return new ATipoRumaTipo(
            cloneNode(this._ruma_),
            cloneNode(this._de_),
            cloneNode(this._tipoBase_),
            cloneNode(this._eCol_),
            cloneNode(this._exp_),
            cloneNode(this._dCol_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATipoRumaTipo(this);
    }

    public TRuma getRuma()
    {
        return this._ruma_;
    }

    public void setRuma(TRuma node)
    {
        if(this._ruma_ != null)
        {
            this._ruma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ruma_ = node;
    }

    public TDe getDe()
    {
        return this._de_;
    }

    public void setDe(TDe node)
    {
        if(this._de_ != null)
        {
            this._de_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._de_ = node;
    }

    public PTipoBase getTipoBase()
    {
        return this._tipoBase_;
    }

    public void setTipoBase(PTipoBase node)
    {
        if(this._tipoBase_ != null)
        {
            this._tipoBase_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tipoBase_ = node;
    }

    public TECol getECol()
    {
        return this._eCol_;
    }

    public void setECol(TECol node)
    {
        if(this._eCol_ != null)
        {
            this._eCol_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._eCol_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TDCol getDCol()
    {
        return this._dCol_;
    }

    public void setDCol(TDCol node)
    {
        if(this._dCol_ != null)
        {
            this._dCol_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dCol_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ruma_)
            + toString(this._de_)
            + toString(this._tipoBase_)
            + toString(this._eCol_)
            + toString(this._exp_)
            + toString(this._dCol_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ruma_ == child)
        {
            this._ruma_ = null;
            return;
        }

        if(this._de_ == child)
        {
            this._de_ = null;
            return;
        }

        if(this._tipoBase_ == child)
        {
            this._tipoBase_ = null;
            return;
        }

        if(this._eCol_ == child)
        {
            this._eCol_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._dCol_ == child)
        {
            this._dCol_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ruma_ == oldChild)
        {
            setRuma((TRuma) newChild);
            return;
        }

        if(this._de_ == oldChild)
        {
            setDe((TDe) newChild);
            return;
        }

        if(this._tipoBase_ == oldChild)
        {
            setTipoBase((PTipoBase) newChild);
            return;
        }

        if(this._eCol_ == oldChild)
        {
            setECol((TECol) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._dCol_ == oldChild)
        {
            setDCol((TDCol) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
